<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Examen pr√°ctica EXANI</title>
  <link rel="stylesheet" href="/css/examen.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>

<!-- PANTALLA DE PRE-EXAMEN -->
<div class="pre-examen-container" id="preExamenContent">
  <div class="pre-examen-content">
    <div class="pre-examen-header">
      <h1><i class="fas fa-graduation-cap"></i> Examen EXANI</h1>
      <p>Demuestra tus conocimientos y compite por un lugar en el ranking global</p>
    </div>

    <!-- Top player -->
    <div class="top-player-section">
      <h2 class="section-title"><i class="fas fa-crown"></i> Jugador Top Global</h2>
      {{#if rankingData.length}}
      <div class="top-player-card">
        <div class="top-badge">ü•á</div>
        <div class="top-avatar">{{rankingData.[0].apodo.[0]}}</div>
        <div class="top-username">{{rankingData.[0].username}}</div>
        <div class="top-category">Total - {{rankingData.[0].puntos}} puntos</div>
      </div>
      {{else}}
      <div class="top-player-card">
        <div class="top-badge">ü•á</div>
        <div class="top-avatar">?</div>
        <div class="top-username">No hay datos a√∫n</div>
        <div class="top-category">S√© el primero en jugar</div>
        <div class="top-score">0 puntos</div>
      </div>
      {{/if}}
      <p>¬°Insp√≠rate en el mejor jugador para lograr tus propios objetivos! Completa el examen con √©xito para aumentar tu puntuaci√≥n global.</p>
    </div>

    {{#if ultimoExamen}}
    <div class="previous-result">
      <i class="fas fa-chart-line" style="font-size: 36px; margin-bottom: 10px;"></i>
      <p>Tu √∫ltimo examen: <strong>{{ultimoExamen}}%</strong></p>
    </div>
    {{else}}
    <div class="no-previous-results">
      <i class="fas fa-inbox" style="font-size: 48px; margin-bottom: 15px;"></i>
      <p>No hay resultados previos para mostrar. ¬°Completa este examen para ver tu progreso!</p>
    </div>
    {{/if}}

    <!-- Informaci√≥n del examen -->
    <div class="exam-info">
      <h2 class="section-title"><i class="fas fa-info-circle"></i> Informaci√≥n del Examen</h2>
      <div class="info-item"><i class="fas fa-question-circle"></i><div><strong>Preguntas:</strong> {{preguntas.length}} en total</div></div>
      <div class="info-item"><i class="fas fa-clock"></i><div><strong>Duraci√≥n:</strong> 60 minutos aproximadamente</div></div>
      <div class="info-item"><i class="fas fa-star"></i><div><strong>Puntuaci√≥n m√°xima:</strong> 100 puntos</div></div>
      <div class="pre-examen-buttons">
        <button class="pre-examen-btn btn-secondary" onclick="location.href='/'">
          <i class="fas fa-arrow-left"></i> Volver Atr√°s
        </button>
        <button class="pre-examen-btn btn-primary" onclick="location.href='/ranking'">
          <i class="fas fa-trophy"></i> Ver Ranking Completo
        </button>
        <button class="pre-examen-btn btn-success pulse" onclick="iniciarExamen()">
          <i class="fas fa-play"></i> Iniciar Examen
        </button>
      </div>
    </div>
  </div>
</div>

<!-- CONTENIDO DEL EXAMEN -->
<div id="examenContent" style="display:none;">
  <header>
    Examen pr√°ctica EXANI
    <div><button onclick="location.href='/simulador'" class="btn-volver">Regresar</button></div>
  </header>

  {{#each preguntas}}
  <div class="contenedor-pregunta {{#if @first}}activa{{/if}}" 
       data-index="{{@index}}" data-materia="{{materia}}">
    <div class="encabezado">
      <div>Pregunta {{sum @index 1}} de {{../preguntas.length}} - <strong>{{materia}}</strong></div>
      <div class="cronometro">60:00</div>
    </div>

    <h2 class="pregunta">{{pregunta}}</h2>

    <div class="opciones">
      {{#each respuestas}}
        <button type="button">{{respuesta}}</button>
      {{/each}}
    </div>

    <div class="navegacion">
      {{#unless @first}}
        <button type="button" class="btn-volver">‚Üê Volver</button>
      {{/unless}}

      <button type="button" class="btn-volver btnNoSeguro">No seguro / Para despu√©s</button>

      {{#if @last}}
        <button type="button" class="btn-finalizar">Finalizar</button>
      {{else}}
        <button type="button" class="btn-siguiente">Siguiente ‚Üí</button>
      {{/if}}
    </div>
  </div>
  {{/each}}

  <div id="pendientesContainer" class="pendientes-container" style="display:none; margin-top:10px;"></div>

  <form id="formResultados" method="POST" action="/resultados_admision" style="display:none;">
    <input type="hidden" name="id_materia" value="{{id_materia}}">
    <input type="hidden" name="respuestas" id="inputRespuestas" value="[]">
    <input type="hidden" name="pendientes" id="inputPendientes">
    <input type="hidden" name="suspensos" id="inputSuspensos">
  </form>
</div>

<script>
const preguntas = document.querySelectorAll('.contenedor-pregunta');
let actual = 0;
let respuestasUsuario = [];
let estadoPreguntas = [];
const TIEMPO_ADVERTENCIA = 60;
let timerAdvertencia = null;

// Funci√≥n pre-examen: inicia el examen
function iniciarExamen() {
  document.getElementById('preExamenContent').style.display = 'none';
  document.getElementById('examenContent').style.display = 'block';

  // Inicializa estadoPreguntas como "pendiente" para todas las preguntas
  estadoPreguntas = preguntas.map(() => "pendiente");
  mostrarPregunta(0);
}

// Funci√≥n para mostrar pregunta
function mostrarPregunta(index) {
  if (index < 0 || index >= preguntas.length) return;
  preguntas.forEach(p => p.classList.remove('activa'));
  preguntas[index].classList.add('activa');
  actual = index;

  const hayPendientes = estadoPreguntas.some(e => e === "pendiente");
  const haySuspensos = estadoPreguntas.some(e => e === "suspenso");

  const pendientesContainer = document.getElementById('pendientesContainer');
  pendientesContainer.style.display = (actual === preguntas.length - 1 && (hayPendientes || haySuspensos)) ? 'block' : 'none';

  actualizarPendientesUI();
  reiniciarTimerAdvertencia();
}

// Reinicia aviso de tiempo
function reiniciarTimerAdvertencia() {
  if (timerAdvertencia) clearTimeout(timerAdvertencia);
  timerAdvertencia = setTimeout(() => {
    alert(`¬°Ojo! Llevas mucho tiempo en la pregunta ${actual + 1}. Considera avanzar o marcarla para despu√©s.`);
  }, TIEMPO_ADVERTENCIA * 1000);
}

// Funci√≥n que actualiza el contenedor de pendientes
function actualizarPendientesUI() {
  const cont = document.getElementById('pendientesContainer');
  cont.innerHTML = "";
  estadoPreguntas.forEach((e, i) => {
    if (e === "pendiente" || e === "suspenso") {
      const div = document.createElement('div');
      const materia = preguntas[i].dataset.materia;
      div.textContent = e === "pendiente" 
        ? `Dejaste la pregunta ${i + 1} (${materia}) en pendiente.` 
        : `Pregunta ${i + 1} (${materia}) marcada como "para despu√©s".`;
      div.dataset.index = i;
      div.addEventListener('click', () => mostrarPregunta(i));
      cont.appendChild(div);
    }
  });
}

// Bot√≥n "Para despu√©s"
document.querySelectorAll('.btnNoSeguro').forEach((btn, indexPregunta) => {
  btn.addEventListener('click', e => {
    e.preventDefault();
    estadoPreguntas[indexPregunta] = "suspenso";
    actualizarPendientesUI();
    mostrarPregunta(actual + 1);
  });
});

// Selecci√≥n de respuestas
document.querySelectorAll('.opciones').forEach((opcionesDiv, preguntaIndex) => {
  opcionesDiv.querySelectorAll('button').forEach((btn, respuestaIndex) => {
    btn.addEventListener('click', () => {
      opcionesDiv.querySelectorAll('button').forEach(b => b.classList.remove('seleccionada'));
      btn.classList.add('seleccionada');
      respuestasUsuario[preguntaIndex] = respuestaIndex;
      estadoPreguntas[preguntaIndex] = "respondida";
      actualizarPendientesUI();
    });
  });
});

// Botones Siguiente / Volver / Finalizar
document.querySelectorAll('.btn-siguiente').forEach(btn => {
  btn.addEventListener('click', () => {
    if (estadoPreguntas[actual] !== "respondida" && estadoPreguntas[actual] !== "suspenso") {
      estadoPreguntas[actual] = "pendiente";
    }
    mostrarPregunta(actual + 1);
  });
});

document.querySelectorAll('.btn-volver').forEach(btn => {
  if (!btn.classList.contains('btnNoSeguro')) {
    btn.addEventListener('click', () => mostrarPregunta(actual - 1));
  }
});

document.querySelectorAll('.btn-finalizar').forEach(btn => {
  btn.addEventListener('click', () => {
    estadoPreguntas.forEach((e,i) => {
      if (respuestasUsuario[i] === undefined && e !== "suspenso") estadoPreguntas[i] = "pendiente";
    });
    document.getElementById('inputRespuestas').value = JSON.stringify(respuestasUsuario);
    document.getElementById('inputPendientes').value = JSON.stringify(
      estadoPreguntas.map((e,i)=> e==="pendiente"?i:null).filter(i=>i!==null)
    );
    document.getElementById('inputSuspensos').value = JSON.stringify(
      estadoPreguntas.map((e,i)=> e==="suspenso"?i:null).filter(i=>i!==null)
    );
    document.getElementById('formResultados').submit();
  });
});

// Cron√≥metro global
let tiempoRestante = 60 * 60;
function actualizarCronometro() {
  const minutos = Math.floor(tiempoRestante / 60);
  const segundos = tiempoRestante % 60;
  const texto = `${minutos.toString().padStart(2,'0')}:${segundos.toString().padStart(2,'0')}`;
  document.querySelectorAll('.cronometro').forEach(c => c.textContent = texto);
  if (tiempoRestante > 0) tiempoRestante--;
  else {
    clearInterval(intervalo);
    alert('¬°Tiempo terminado!');
    window.location.href = '/menu_principal';
  }
}
const intervalo = setInterval(actualizarCronometro, 1000);
</script>

</body>
</html>
